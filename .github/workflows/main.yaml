name: Build & Release

permissions:
  contents: write

on:
  workflow_call:
    secrets:
      G_TOKEN:
        required: true
    inputs:
      path:
        required: true
        type: string

jobs:
  # validate:
  #   runs-on: ubuntu-latest
  #   env:
  #     TERRAFORM_VERSION: "1.7.3"
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install tfenv
  #       run: |
  #         git clone https://github.com/tfutils/tfenv.git ~/.tfenv
  #         echo "$HOME/.tfenv/bin" >> $GITHUB_PATH

  #     - name: Install Terraform
  #       run: |
  #         tfenv install ${TERRAFORM_VERSION} && tfenv use ${TERRAFORM_VERSION}
  #         terraform version

  #     - name: Check Terraform formatting
  #       run: |
  #         cd ${{ inputs.path }}
  #         if [ `terraform fmt --list=true -diff=true -write=false | tee format-issues | wc -c` -ne 0 ]; then
  #           echo "Some terraform files need be formatted, run 'terraform fmt' to fix"
  #           echo "Formatting issues:"
  #           cat format-issues
  #           exit 1
  #         fi

  #     - name: Initialize and validate terraform
  #       run: |
  #         cd ${{ inputs.path }}
  #         terraform init -input=false
  #         terraform validate

  release:
    # needs:
    #   - validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          tag_format: ${{ inputs.path }}-v${version}
          working_directory: ${{ inputs.path }}
          branch: main
          ci: true
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
